<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">


<beans>

	

	<!-- bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager" -->
	<!-- property name="persistenceXmlLocation">
		<list>
		<value>
		org/springframework/orm/jpa/domain/persistence-multi.xml
		</value>
		<value>
		classpath:/my/package/**/custom-persistence.xml
		</value>
		<value>classpath*:META-INF/persistence.xml</value>
		</list>
		</property>
		<property>
		<map>
		<entry key="localDataSource" value-ref="local-db" />
		<entry key="remoteDataSource" value-ref="remote-db" />
		</map>
		</property -->
	<!-- if no datasource is specified, use this one -->
	<!-- property name="defaultDataSource" ref="remoteDataSource" / -->

	<!-- /bean -->

	<!-- JNDI DataSource for J2EE environments -->

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/jpasample"/>
	</bean>


 
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	  <property name="dataSource" ref="dataSource"/>
	  <property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter">
				
				<property name="generateDdl" value="false"/>
				<property name="showSql" value="true" />
			</bean>
		</property>
	  <property name="loadTimeWeaver">
	    <bean class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver"/>
	  </property>
	</bean>	
	
 
 <!-- 
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="default" />
	</bean>
 -->
	 
	<bean id="entityManager"
		class="com.merrill.examples.framework.server.persistence.DefaultEntityManager">
	</bean>


	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
	</bean>
	
	
	
	<!--
		PostProcessors to perform resource injection according to the JPA specification
	  (@PersistenceContext, @PersistenceUnit).
	-->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

	<!--
		PostProcessors to perform exception translation on @Repository classes (from native
		exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
	-->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

	

</beans>
