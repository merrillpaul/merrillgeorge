<?xml version="1.0"?>
<!--
	* Copyright 2004 The Apache Software Foundation.
	*
	* Licensed under the Apache License, Version 2.0 (the "License");
	* you may not use this file except in compliance with the License.
	* You may obtain a copy of the License at
	*
	*      http://www.apache.org/licenses/LICENSE-2.0
	*
	* Unless required by applicable law or agreed to in writing, software
	* distributed under the License is distributed on an "AS IS" BASIS,
	* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	* See the License for the specific language governing permissions and
	* limitations under the License.
	*
	* UPDATED: Marty Hall changed to use .faces suffix,
	*          faces-config.xml filename, and servlets 2.4.
	*          See tutorial at http://www.coreservlets.com/JSF-Tutorial/.
	*          Note: uncomment the filter entries at the bottom
	*                to use Tomahawk extended components.
-->

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">

	<!-- Marty Hall: 
		Changed name from "examples-config.xml"
		back to standard of "faces-config.xml" -->
	<context-param>
		<param-name>javax.faces.CONFIG_FILES</param-name>
		<param-value>
			/WEB-INF/faces-config.xml, /WEB-INF/jsf-el-faces-config.xml,
			/WEB-INF/event-sample-faces-config.xml,
			/WEB-INF/validation-samples-faces-config.xml,
			/WEB-INF/ajax-samples-faces-config.xml,
			/WEB-INF/dwr-samples-faces-config.xml,
			/WEB-INF/tabular-faces-config.xml
		</param-value>

	</context-param>

	<context-param>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>client</param-value>

	</context-param>

	<context-param>
		<param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
		<param-value>true</param-value>

	</context-param>

	<context-param>
		<param-name>org.apache.myfaces.PRETTY_HTML</param-name>
		<param-value>true</param-value>

	</context-param>

	<context-param>
		<param-name>org.apache.myfaces.DETECT_JAVASCRIPT</param-name>
		<param-value>false</param-value>
	</context-param>

	<context-param>
		<param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
		<param-value>true</param-value>

	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext.xml,
			/WEB-INF/applicationContext_tokenGenerator.xml,
			/WEB-INF/iport/masters/applicationContext.xml
			/WEB-INF/iport/masters/applicationContext_client.xml
		</param-value>
		<!--
			<param-value>
			/WEB-INF/dataAccessContext-jta.xml  /WEB-INF/applicationContext.xml
			</param-value>
		-->
	</context-param>
	
	<context-param>
			<param-name>TOKEN_SERVICE_NAME</param-name>
			<param-value>tokenService</param-value>
	</context-param>	


	<filter>
		<display-name>Ajax4JSF Filter</display-name>
		<filter-name>ajax4jsf</filter-name>
		<filter-class>org.ajax4jsf.Filter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>ajax4jsf</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>

	<!-- Listener, that does all the startup work (configuration, init). -->
	<listener>
		<listener-class>
			org.apache.myfaces.webapp.StartupServletContextListener
		</listener-class>
	</listener>

	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	
	<listener>
		<listener-class>
			com.merrill.examples.framework.security.token.web.TokenInvalidationListener
		</listener-class>
		
	</listener>

	<!-- Faces Servlet
		Marty Hall: changed .jsf back to standard of .faces -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>


	<servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<servlet-name>Captcha Servlet</servlet-name>
		<servlet-class>com.merrill.examples.framework.security.token.web.TokenGeneratorServlet</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.faces</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>Captcha Servlet</servlet-name>
		<url-pattern>/captcha.tok</url-pattern>
	</servlet-mapping>

	<!-- Welcome files -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<!-- 
		*** Uncomment the extensions filter and the two following extensions
		*** mappings to enable Tomahawk (MyFaces extended components
		*** and custom validators). See tutorial at 
		*** http://www.coreservlets.com/JSF-Tutorial/ and
		*** http://myfaces.apache.org/tomahawk/extensionsFilter.html
		*** Also note that if you use the old style (servlet 2.3)
		*** declaration for web.xml, you have to put these filter entries
		*** at the TOP of web.xml.
	-->
	<filter>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<filter-class>
			org.apache.myfaces.webapp.filter.ExtensionsFilter
		</filter-class>
		<init-param>
			<param-name>maxFileSize</param-name>
			<param-value>20m</param-value>

		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
	</filter-mapping>
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>/faces/myFacesExtensionResource/*</url-pattern>
	</filter-mapping>
	<!-- *** -->
	
	<resource-ref >
      <description>DB Connection</description>
      <res-ref-name>jdbc/jpasample</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
  </resource-ref>
  
  <!--  resource-env-ref>
      <description>
        DB Connection
      </description>
      <resource-env-ref-name>
        jdbc/jpasample
      </resource-env-ref-name>
      <resource-env-ref-type>
        javax.sql.DataSource
      </resource-env-ref-type>
  </resource-env-ref -->
  
	
	<security-constraint>
		<display-name>
			Prevent access to raw JSP pages that are for JSF pages.
		</display-name>
		<web-resource-collection>
			<web-resource-name>Raw-JSF-JSP-Pages</web-resource-name>
			<url-pattern>*.jsp</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<description>No roles, so no direct access</description>
		</auth-constraint>
	</security-constraint>
	
	<!--  
	<security-constraint>
		<display-name>Sample security constraint</display-name>
		<web-resource-collection>
			<web-resource-name>Actions</web-resource-name>
			<url-pattern>*.faces</url-pattern>
			<http-method>GET</http-method>
			<http-method>POST</http-method>
		</web-resource-collection>
		<auth-constraint>
		 <role-name>application.group</role-name>
		</auth-constraint>
		<user-data-constraint>
			<transport-guarantee>NONE</transport-guarantee>
		</user-data-constraint>
	</security-constraint>

	<login-config>
		<auth-method>FORM</auth-method>
		<realm-name>Test Authentication with CAPTCHA</realm-name>
		<form-login-config>
			<form-login-page>/pages/security/login.faces</form-login-page>
			<form-error-page>/pages/security/login_error.faces</form-error-page>
		</form-login-config>
	</login-config>

	<security-role>
		<description>
			The role allowed to access our content
		</description>
		<role-name>application.group</role-name>
	</security-role>
-->

</web-app>